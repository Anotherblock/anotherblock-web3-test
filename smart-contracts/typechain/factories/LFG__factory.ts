/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { LFG, LFGInterface } from "../LFG";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "Wagmi",
    type: "event",
  },
  {
    inputs: [],
    name: "gm",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gmCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b50610209806100246000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636cb5f7101461003b578063c0129d4314610059575b600080fd5b610043610063565b6040516100509190610104565b60405180910390f35b610061610069565b005b60005481565b60008081548092919061007b9061015b565b91905055507f4c9898649aaf2d737b14235c1f4a1d5c30482a16045ce34074ba3ffc6823b480336000546040516100b39291906100db565b60405180910390a1565b6100c68161011f565b82525050565b6100d581610151565b82525050565b60006040820190506100f060008301856100bd565b6100fd60208301846100cc565b9392505050565b600060208201905061011960008301846100cc565b92915050565b600061012a82610131565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061016682610151565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610199576101986101a4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122051a690617a2479a192c89891605fcf3d4b1618c2c91178c8b8d971a64a03850264736f6c63430008040033";

type LFGConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LFGConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LFG__factory extends ContractFactory {
  constructor(...args: LFGConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LFG> {
    return super.deploy(overrides || {}) as Promise<LFG>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LFG {
    return super.attach(address) as LFG;
  }
  override connect(signer: Signer): LFG__factory {
    return super.connect(signer) as LFG__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LFGInterface {
    return new utils.Interface(_abi) as LFGInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): LFG {
    return new Contract(address, _abi, signerOrProvider) as LFG;
  }
}
